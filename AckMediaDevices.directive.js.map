{"version":3,"sources":["../lib/AckMediaDevices.directive.ts"],"names":[],"mappings":";;AAAA,sCAAmE;AACnE,yCAAwB;AASvB;IAAA;QACE,UAAK,GAAY,EAAE,CAAA;QACnB,gBAAW,GAA0B,IAAI,mBAAY,EAAE,CAAA;QAGvD,gBAAW,GAAuB,IAAI,mBAAY,EAAE,CAAA;QACpD,YAAO,GAAuB,IAAI,mBAAY,EAAE,CAAA;IA8BnD,CAAC;IA5BC,kCAAQ,GAAR;QACE,IAAI,CAAC,WAAW,EAAE,CAAA;IACpB,CAAC;IAED,qCAAW,GAAX;QAAA,iBAQC;QAPC,MAAM,CAAC,mBAAO,CAAC,YAAY,CAAC,gBAAgB,EAAE;aAC7C,IAAI,CAAE,UAAA,OAAO,IAAE,OAAA,KAAI,CAAC,WAAW,CAAC,IAAI,CAAC,KAAI,CAAC,KAAK,GAAC,OAAO,CAAC,EAAzC,CAAyC,CAAE;aAC1D,KAAK,CAAC,UAAA,CAAC;YACN,KAAI,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC,CAAC,CAAA;YACpB,KAAI,CAAC,WAAW,CAAC,IAAI,CAAC,KAAI,CAAC,KAAK,GAAC,CAAC,CAAC,CAAA;YACnC,MAAM,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC,CAAC,CAAA;QAC1B,CAAC,CAAC,CAAA;IACJ,CAAC;IACI,0BAAU,GAA0B;QAC3C,EAAE,IAAI,EAAE,gBAAS,EAAE,IAAI,EAAE,CAAC;oBACxB,QAAQ,EAAE,mBAAmB;iBAC9B,EAAG,EAAE;KACL,CAAC;IACF,kBAAkB;IACX,8BAAc,GAAmE,cAAM,OAAA,EAC7F,EAD6F,CAC7F,CAAC;IACK,8BAAc,GAA2C;QAChE,OAAO,EAAE,CAAC,EAAE,IAAI,EAAE,YAAK,EAAE,EAAE;QAC3B,aAAa,EAAE,CAAC,EAAE,IAAI,EAAE,aAAM,EAAE,EAAE;QAClC,OAAO,EAAE,CAAC,EAAE,IAAI,EAAE,YAAK,EAAE,EAAE;QAC3B,aAAa,EAAE,CAAC,EAAE,IAAI,EAAE,aAAM,EAAE,EAAE;QAClC,SAAS,EAAE,CAAC,EAAE,IAAI,EAAE,aAAM,EAAE,IAAI,EAAE,CAAC,OAAO,EAAG,EAAE,EAAE;KAChD,CAAC;IACF,sBAAC;CApCA,AAoCA,IAAA;AApCa,0CAAe","file":"AckMediaDevices.directive.js","sourceRoot":"","sourcesContent":["import { Directive, ElementRef, Input, Output, EventEmitter } from '@angular/core'\nimport { browser } from \"./videoHelp\"\n\nexport interface device{\n  deviceId: string\n  kind: \"videoinput\" | \"audioinput\" | string\n  label: string\n  groupId: string\n}\n\n export class AckMediaDevices {\n   array:device[] = []\n   arrayChange:EventEmitter<device[]> = new EventEmitter()\n\n   error:Error\n   errorChange:EventEmitter<Error> = new EventEmitter()\n   catcher:EventEmitter<Error> = new EventEmitter()\n\n  ngOnInit(){\n    this.loadDevices()\n  }\n\n  loadDevices():Promise<device[]>{\n    return browser.mediaDevices.enumerateDevices()\n    .then( devices=>this.arrayChange.emit(this.array=devices) )\n    .catch(e=>{\n      this.catcher.emit(e)\n      this.errorChange.emit(this.error=e)\n      return Promise.reject(e)\n    })\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{\n  selector: 'ack-media-devices'\n}, ] },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'array': [{ type: Input },],\n'arrayChange': [{ type: Output },],\n'error': [{ type: Input },],\n'errorChange': [{ type: Output },],\n'catcher': [{ type: Output, args: ['catch', ] },],\n};\n}\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}