{"version":3,"file":"AckMediaDevices.directive.js","sourceRoot":"","sources":["../src/AckMediaDevices.directive.ts"],"names":[],"mappings":";;AAAA,sCAAkF;AAClF,yCAOoB;;;qBAKiB,EAAE;2BACmB,IAAI,mBAAY,EAAE;2BAG9B,IAAI,mBAAY,EAAE;uBACf,IAAI,mBAAY,EAAE;iCAGH,IAAI,mBAAY,EAAE;iCAGlB,IAAI,mBAAY,EAAE;kCAGjB,IAAI,mBAAY,EAAE;;IAEjF,kCAAQ,GAAR;QACE,IAAI,CAAC,WAAW,EAAE,CAAA;KACnB;IAED,qCAAW,GAAX;QAAA,iBAQC;QAPC,MAAM,CAAC,0BAAc,EAAE;aACtB,IAAI,CAAC,UAAA,OAAO,IAAE,OAAA,KAAI,CAAC,SAAS,CAAC,OAAO,CAAC,IAAI,OAAO,EAAlC,CAAkC,CAAC;aACjD,KAAK,CAAC,UAAA,CAAC;YACN,KAAI,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC,CAAC,CAAA;YACpB,KAAI,CAAC,WAAW,CAAC,IAAI,CAAC,KAAI,CAAC,KAAK,GAAC,CAAC,CAAC,CAAA;YACnC,MAAM,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC,CAAC,CAAA;SACzB,CAAC,CAAA;KACH;IAED,mCAAS,GAAT,UAAU,OAAyB;QACjC,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,GAAC,OAAO,CAAC,CAAA;QAEzC,EAAE,CAAA,CAAC,IAAI,CAAC,iBAAiB,CAAC,SAAS,CAAC,MAAM,CAAC,CAAA,CAAC;YAC1C,IAAI,CAAC,WAAW,GAAG,gCAAoB,CAAC,OAAO,CAAC,CAAA;YAChD,IAAI,CAAC,iBAAiB,CAAC,IAAI,CAAC,IAAI,CAAC,WAAW,CAAC,CAAA;SAC9C;QAED,EAAE,CAAA,CAAC,IAAI,CAAC,kBAAkB,CAAC,SAAS,CAAC,MAAM,CAAC,CAAA,CAAC;YAC3C,IAAI,CAAC,YAAY,GAAG,iCAAqB,CAAC,OAAO,CAAC,CAAA;YAClD,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,IAAI,CAAC,YAAY,CAAC,CAAA;SAChD;QAED,EAAE,CAAA,CAAC,IAAI,CAAC,iBAAiB,CAAC,SAAS,CAAC,MAAM,CAAC,CAAA,CAAC;YAC1C,IAAI,CAAC,WAAW,GAAG,gCAAoB,CAAC,OAAO,CAAC,CAAA;YAChD,IAAI,CAAC,iBAAiB,CAAC,IAAI,CAAC,IAAI,CAAC,WAAW,CAAC,CAAA;SAC9C;QAED,MAAM,CAAC,IAAI,CAAA;KACZ;;gBApDF,gBAAS,SAAC;oBACT,QAAQ,EAAE,mBAAmB;iBAC9B;;;;;0BACE,YAAK;gCACL,aAAM;0BAEN,YAAK;gCACL,aAAM;4BACN,aAAM,SAAC,OAAO;gCAEd,YAAK;sCACL,aAAM;gCAEN,YAAK;sCACL,aAAM;iCAEN,YAAK;uCACL,aAAM;;0BA3BT;;AAYgB,0CAAe","sourcesContent":["import { Directive, ElementRef, Input, Output, EventEmitter } from '@angular/core'\nimport {\n  audioInputsByDevices,\n  audioOutputsByDevices,\n  videoInputsByDevices,\n  //MediaDevice,\n  browser,\n  promiseDevices\n} from \"./videoHelp\"\n\n@Directive({\n  selector: 'ack-media-devices'\n}) export class AckMediaDevices {\n  @Input() array:MediaDeviceInfo[] = []\n  @Output() arrayChange:EventEmitter<MediaDeviceInfo[]> = new EventEmitter()\n\n  @Input() error:Error\n  @Output() errorChange:EventEmitter<Error> = new EventEmitter()\n  @Output('catch') catcher:EventEmitter<Error> = new EventEmitter()\n\n  @Input() videoInputs:MediaDeviceInfo[]\n  @Output() videoInputsChange:EventEmitter<MediaDeviceInfo[]> = new EventEmitter()\n\n  @Input() audioInputs:MediaDeviceInfo[]\n  @Output() audioInputsChange:EventEmitter<MediaDeviceInfo[]> = new EventEmitter()\n\n  @Input() audioOutputs:MediaDeviceInfo[]\n  @Output() audioOutputsChange:EventEmitter<MediaDeviceInfo[]> = new EventEmitter()\n\n  ngOnInit(){\n    this.loadDevices()\n  }\n\n  loadDevices():Promise<MediaDeviceInfo[]>{\n    return promiseDevices()\n    .then(devices=>this.onDevices(devices) && devices)\n    .catch(e=>{\n      this.catcher.emit(e)\n      this.errorChange.emit(this.error=e)\n      return Promise.reject(e)\n    })\n  }\n\n  onDevices(devices:MediaDeviceInfo[]):AckMediaDevices{\n    this.arrayChange.emit(this.array=devices)\n    \n    if(this.audioInputsChange.observers.length){\n      this.audioInputs = audioInputsByDevices(devices)\n      this.audioInputsChange.emit(this.audioInputs)\n    }\n    \n    if(this.audioOutputsChange.observers.length){\n      this.audioOutputs = audioOutputsByDevices(devices)\n      this.audioOutputsChange.emit(this.audioOutputs)\n    }\n\n    if(this.videoInputsChange.observers.length){\n      this.videoInputs = videoInputsByDevices(devices)\n      this.videoInputsChange.emit(this.videoInputs)\n    }\n\n    return this\n  }\n}"]}