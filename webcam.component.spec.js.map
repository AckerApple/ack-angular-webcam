{"version":3,"sources":["../lib/webcam.component.spec.ts"],"names":[],"mappings":";;AAAA,iDAAyE;AACzE,8DAAyD;AACzD,sCAA2C;AAC3C,uDAAqD;AAErD,IAAI,OAA0C,CAAC;AAC/C,IAAI,IAAqB,CAAC;AAE1B,8BAA8B;AAC9B,EAAE,CAAA,CAAC,CAAC,QAAQ,CAAC,CAAA,CAAC;IACZ,IAAI,QAAQ,GAAG,UAAC,CAAE,EAAC,CAAE,IAAI,CAAC,CAAA;IAC1B,IAAI,UAAU,GAAG,UAAC,CAAE,IAAI,CAAC,CAAA;IACzB,IAAI,EAAE,GAAG,UAAC,CAAE,EAAC,CAAE,IAAI,CAAC,CAAA;IACpB,IAAI,MAAM,GAAG,UAAC,CAAE,IAAI,MAAM,CAAC,EAAC,UAAU,EAAC,cAAK,CAAC,EAAC,CAAA,CAAA,CAAC,CAAA;AACjD,CAAC;AAED,QAAQ,CAAC,iBAAiB,EAAE;IAE1B,IAAM,cAAc,GAAG,EAAE,CAAC;IAC1B,IAAM,gBAAgB,GAAG;QACvB,8BAA8B,EAAE,cAAO,CAAC;KACzC,CAAC;IAEF,UAAU,CAAC,eAAK,CAAC;QACf,iBAAO,CAAC,sBAAsB,CAAC;YAC3B,YAAY,EAAE;gBACZ,kCAAe;aAChB;YACD,SAAS,EAAE;gBACT,EAAC,OAAO,EAAE,iBAAU,EAAE,QAAQ,EAAE,cAAc,EAAC;gBAC/C,EAAC,OAAO,EAAE,+BAAY,EAAE,QAAQ,EAAE,gBAAgB,EAAC;aACpD;SACF,CAAC;aACD,iBAAiB,EAAE;aACnB,IAAI,CAAC;YACJ,OAAO,GAAG,iBAAO,CAAC,eAAe,CAAC,kCAAe,CAAC,CAAC;YACnD,IAAI,GAAG,OAAO,CAAC,iBAAiB,CAAC;QACnC,CAAC,CAAC,CAAC;IACP,CAAC,CAAC,CAAC,CAAC;IAEJ,EAAE,CAAC,mCAAmC,EAAE,eAAK,CAAC;QAC5C,IAAM,IAAI,GAAG,OAAO,CAAC,YAAY,CAAC,iBAAiB,CAAC;QACpD,MAAM,CAAC,IAAI,CAAC,CAAC,UAAU,EAAE,CAAC;IAC5B,CAAC,CAAC,CAAC,CAAC;AACN,CAAC,CAAC,CAAC","file":"webcam.component.spec.js","sourceRoot":"","sourcesContent":["import { ComponentFixture, TestBed, async } from '@angular/core/testing';\nimport { DomSanitizer } from '@angular/platform-browser';\nimport { ElementRef } from '@angular/core';\nimport { WebCamComponent } from './webcam.component';\n\nlet fixture: ComponentFixture<WebCamComponent>;\nlet comp: WebCamComponent;\n\n//make AoT compatible with ngc\nif(!describe){\n  var describe = (i?,x?)=>{}\n  var beforeEach = (i?)=>{}\n  var it = (i?,x?)=>{}\n  var expect = (i?)=>{return {toBeTruthy:()=>{}}}\n}\n\ndescribe('WebCamComponent', () => {\n\n  const elementRefStub = {};\n  const domSanitizerStub = {\n    bypassSecurityTrustResourceUrl: () => {}\n  };\n\n  beforeEach(async(() => {\n    TestBed.configureTestingModule({\n        declarations: [\n          WebCamComponent\n        ],\n        providers: [\n          {provide: ElementRef, useValue: elementRefStub},\n          {provide: DomSanitizer, useValue: domSanitizerStub}\n        ]\n      })\n      .compileComponents()\n      .then(() => {\n        fixture = TestBed.createComponent(WebCamComponent);\n        comp = fixture.componentInstance;\n      });\n  }));\n\n  it('should create the WebCamComponent', async(() => {\n    const step = fixture.debugElement.componentInstance;\n    expect(step).toBeTruthy();\n  }));\n});\n"]}